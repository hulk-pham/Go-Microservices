basePath: /api
definitions:
  base.JSONResult:
    properties:
      code:
        type: integer
      data: {}
      message:
        type: string
    type: object
  commands.CreateUserDto:
    properties:
      address:
        type: string
      dob:
        type: string
      email:
        type: string
      first_name:
        type: string
      hobby:
        type: string
      last_name:
        type: string
      password:
        type: string
      phone_number:
        type: string
    required:
    - email
    - first_name
    - last_name
    - password
    - phone_number
    type: object
  entities.User:
    properties:
      address:
        type: string
      avatar:
        type: string
      created_at:
        type: string
      deleted_at:
        $ref: '#/definitions/gorm.DeletedAt'
      dob:
        type: string
      email:
        type: string
      first_name:
        type: string
      hobby:
        type: string
      id:
        type: integer
      last_name:
        type: string
      phone_number:
        type: string
      updated_at:
        type: string
    type: object
  gorm.DeletedAt:
    properties:
      time:
        type: string
      valid:
        description: Valid is true if Time is not NULL
        type: boolean
    type: object
  hulk_go-webservice_presentation_http_auth.LoginRequest:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  hulk_go-webservice_presentation_http_auth.SignUpRequest:
    properties:
      address:
        type: string
      dob:
        type: string
      email:
        type: string
      first_name:
        type: string
      hobby:
        type: string
      last_name:
        type: string
      password:
        type: string
      phone_number:
        type: string
    required:
    - email
    - first_name
    - last_name
    - password
    - phone_number
    type: object
  presentation_http_auth.LoginRequest:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  presentation_http_auth.SignUpRequest:
    properties:
      address:
        type: string
      dob:
        type: string
      email:
        type: string
      first_name:
        type: string
      hobby:
        type: string
      last_name:
        type: string
      password:
        type: string
      phone_number:
        type: string
    required:
    - email
    - first_name
    - last_name
    - password
    - phone_number
    type: object
info:
  contact: {}
paths:
  /auth/login:
    post:
      consumes:
      - application/json
      description: login
      parameters:
      - description: body params
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/hulk_go-webservice_presentation_http_auth.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/base.JSONResult'
            - properties:
                data:
                  type: string
              type: object
      summary: Login User
      tags:
      - auth
  /auth/signup:
    post:
      consumes:
      - application/json
      description: create user
      parameters:
      - description: body params
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/hulk_go-webservice_presentation_http_auth.SignUpRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/base.JSONResult'
            - properties:
                data:
                  $ref: '#/definitions/entities.User'
              type: object
      summary: Sign Up
      tags:
      - auth
  /user:
    get:
      consumes:
      - application/json
      description: list all user
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/base.JSONResult'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/entities.User'
                  type: array
              type: object
      security:
      - ApiKeyAuth: []
      summary: List User
      tags:
      - user
    post:
      consumes:
      - application/json
      description: create user
      parameters:
      - description: body params
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/commands.CreateUserDto'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/base.JSONResult'
            - properties:
                data:
                  $ref: '#/definitions/entities.User'
              type: object
      security:
      - ApiKeyAuth: []
      summary: Create User
      tags:
      - user
  /user/{id}/avatar-upload:
    post:
      consumes:
      - application/json
      description: create user
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      - description: file
        in: formData
        name: file
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/base.JSONResult'
            - properties:
                data:
                  $ref: '#/definitions/entities.User'
              type: object
      security:
      - ApiKeyAuth: []
      summary: User Update Avatar
      tags:
      - user
  /user/search:
    get:
      consumes:
      - application/json
      description: search all user
      parameters:
      - description: Keyword
        in: path
        name: keyword
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/base.JSONResult'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/entities.User'
                  type: array
              type: object
      security:
      - ApiKeyAuth: []
      summary: Search User
      tags:
      - user
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
